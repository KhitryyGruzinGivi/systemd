From 40c5012fb52b8e9fe19da18a4f0ca2282e780fed Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Tue, 10 Jul 2012 17:03:11 +0200
Subject: [PATCH] unit-name: remove unit_name_is_valid_no_type() and move
 unit_name_is_valid() to unit-name.h (cherry picked from
 commit 5f73969991fa765f2826975c0fc5e47438b5e9ea)

---
 src/core/manager.c     |  2 +-
 src/core/unit.c        | 22 ----------------------
 src/core/unit.h        |  3 ---
 src/shared/install.c   | 18 +++++++++---------
 src/shared/unit-name.c | 19 +++++++++++++++++--
 src/shared/unit-name.h |  4 +++-
 6 files changed, 30 insertions(+), 38 deletions(-)

diff --git a/src/core/manager.c b/src/core/manager.c
index 2a17794..64c7823 100644
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -797,7 +797,7 @@ int manager_load_unit_prepare(Manager *m, const char *name, const char *path, DB
 
         t = unit_name_to_type(name);
 
-        if (t == _UNIT_TYPE_INVALID || !unit_name_is_valid_no_type(name, false)) {
+        if (t == _UNIT_TYPE_INVALID || !unit_name_is_valid(name, false)) {
                 dbus_set_error(e, BUS_ERROR_INVALID_NAME, "Unit name %s is not valid.", name);
                 return -EINVAL;
         }
diff --git a/src/core/unit.c b/src/core/unit.c
index b52ed42..f5ced75 100644
--- a/src/core/unit.c
+++ b/src/core/unit.c
@@ -2635,28 +2635,6 @@ bool unit_pending_active(Unit *u) {
         return false;
 }
 
-UnitType unit_name_to_type(const char *n) {
-        UnitType t;
-
-        assert(n);
-
-        for (t = 0; t < _UNIT_TYPE_MAX; t++)
-                if (endswith(n, unit_vtable[t]->suffix))
-                        return t;
-
-        return _UNIT_TYPE_INVALID;
-}
-
-bool unit_name_is_valid(const char *n, bool template_ok) {
-        UnitType t;
-
-        t = unit_name_to_type(n);
-        if (t < 0 || t >= _UNIT_TYPE_MAX)
-                return false;
-
-        return unit_name_is_valid_no_type(n, template_ok);
-}
-
 int unit_kill(Unit *u, KillWho w, KillMode m, int signo, DBusError *error) {
         assert(u);
         assert(w >= 0 && w < _KILL_WHO_MAX);
diff --git a/src/core/unit.h b/src/core/unit.h
index c994107..267a03e 100644
--- a/src/core/unit.h
+++ b/src/core/unit.h
@@ -538,9 +538,6 @@ int unit_add_default_target_dependency(Unit *u, Unit *target);
 
 int unit_following_set(Unit *u, Set **s);
 
-UnitType unit_name_to_type(const char *n);
-bool unit_name_is_valid(const char *n, bool template_ok);
-
 void unit_trigger_on_failure(Unit *u);
 
 bool unit_condition_test(Unit *u);
diff --git a/src/shared/install.c b/src/shared/install.c
index f443578..786846e 100644
--- a/src/shared/install.c
+++ b/src/shared/install.c
@@ -607,7 +607,7 @@ int unit_file_mask(
         STRV_FOREACH(i, files) {
                 char *path;
 
-                if (!unit_name_is_valid_no_type(*i, true)) {
+                if (!unit_name_is_valid(*i, true)) {
                         if (r == 0)
                                 r = -EINVAL;
                         continue;
@@ -683,7 +683,7 @@ int unit_file_unmask(
         STRV_FOREACH(i, files) {
                 char *path;
 
-                if (!unit_name_is_valid_no_type(*i, true)) {
+                if (!unit_name_is_valid(*i, true)) {
                         if (r == 0)
                                 r = -EINVAL;
                         continue;
@@ -759,7 +759,7 @@ int unit_file_link(
                 fn = path_get_file_name(*i);
 
                 if (!path_is_absolute(*i) ||
-                    !unit_name_is_valid_no_type(fn, true)) {
+                    !unit_name_is_valid(fn, true)) {
                         if (r == 0)
                                 r = -EINVAL;
                         continue;
@@ -922,7 +922,7 @@ static int install_info_add(
         if (!name)
                 name = path_get_file_name(path);
 
-        if (!unit_name_is_valid_no_type(name, true))
+        if (!unit_name_is_valid(name, true))
                 return -EINVAL;
 
         if (hashmap_get(c->have_installed, name) ||
@@ -1232,7 +1232,7 @@ static int install_info_symlink_wants(
         STRV_FOREACH(s, i->wanted_by) {
                 char *path;
 
-                if (!unit_name_is_valid_no_type(*s, true)) {
+                if (!unit_name_is_valid(*s, true)) {
                         r = -EINVAL;
                         continue;
                 }
@@ -1266,7 +1266,7 @@ static int install_info_symlink_requires(
         STRV_FOREACH(s, i->required_by) {
                 char *path;
 
-                if (!unit_name_is_valid_no_type(*s, true)) {
+                if (!unit_name_is_valid(*s, true)) {
                         r = -EINVAL;
                         continue;
                 }
@@ -1597,7 +1597,7 @@ UnitFileState unit_file_get_state(
         if (root_dir && scope != UNIT_FILE_SYSTEM)
                 return -EINVAL;
 
-        if (!unit_name_is_valid_no_type(name, true))
+        if (!unit_name_is_valid(name, true))
                 return -EINVAL;
 
         r = lookup_paths_init_from_scope(&paths, scope);
@@ -1792,7 +1792,7 @@ int unit_file_preset(
 
         STRV_FOREACH(i, files) {
 
-                if (!unit_name_is_valid_no_type(*i, true)) {
+                if (!unit_name_is_valid(*i, true)) {
                         r = -EINVAL;
                         goto finish;
                 }
@@ -1897,7 +1897,7 @@ int unit_file_get_list(
                         if (ignore_file(de->d_name))
                                 continue;
 
-                        if (!unit_name_is_valid_no_type(de->d_name, true))
+                        if (!unit_name_is_valid(de->d_name, true))
                                 continue;
 
                         if (hashmap_get(h, de->d_name))
diff --git a/src/shared/unit-name.c b/src/shared/unit-name.c
index b962634..d26340e 100644
--- a/src/shared/unit-name.c
+++ b/src/shared/unit-name.c
@@ -48,7 +48,7 @@ static const char* const unit_type_table[_UNIT_TYPE_MAX] = {
 
 DEFINE_STRING_TABLE_LOOKUP(unit_type, UnitType);
 
-bool unit_name_is_valid_no_type(const char *n, bool template_ok) {
+bool unit_name_is_valid(const char *n, bool template_ok) {
         const char *e, *i, *at;
 
         /* Valid formats:
@@ -66,6 +66,9 @@ bool unit_name_is_valid_no_type(const char *n, bool template_ok) {
         if (!e || e == n)
                 return false;
 
+        if (unit_type_from_string(e + 1) < 0)
+                return false;
+
         for (i = n, at = NULL; i < e; i++) {
 
                 if (*i == '@' && !at)
@@ -166,7 +169,7 @@ char *unit_name_change_suffix(const char *n, const char *suffix) {
         size_t a, b;
 
         assert(n);
-        assert(unit_name_is_valid_no_type(n, true));
+        assert(unit_name_is_valid(n, true));
         assert(suffix);
 
         assert_se(e = strrchr(n, '.'));
@@ -486,3 +489,15 @@ char *unit_dbus_path_from_name(const char *name) {
 
         return p;
 }
+
+UnitType unit_name_to_type(const char *n) {
+        const char *e;
+
+        assert(n);
+
+        e = strrchr(n, '.');
+        if (!e)
+                return _UNIT_TYPE_INVALID;
+
+        return unit_type_from_string(e + 1);
+}
diff --git a/src/shared/unit-name.h b/src/shared/unit-name.h
index 6bfba24..80efa00 100644
--- a/src/shared/unit-name.h
+++ b/src/shared/unit-name.h
@@ -50,10 +50,12 @@ int unit_name_to_instance(const char *n, char **instance);
 char* unit_name_to_prefix(const char *n);
 char* unit_name_to_prefix_and_instance(const char *n);
 
-bool unit_name_is_valid_no_type(const char *n, bool template_ok);
+bool unit_name_is_valid(const char *n, bool template_ok);
 bool unit_prefix_is_valid(const char *p);
 bool unit_instance_is_valid(const char *i);
 
+UnitType unit_name_to_type(const char *n);
+
 char *unit_name_change_suffix(const char *n, const char *suffix);
 
 char *unit_name_build(const char *prefix, const char *instance, const char *suffix);
